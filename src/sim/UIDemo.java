package sim;

import javax.swing.*;
import javax.swing.table.TableColumnModel;
import java.awt.*;

/**
 * @author Roman Elizarov
 */
public class UIDemo {
    private static final String[] ALGOS = {"DFB", "DPVA", "MDVA", "MDVAm", "SPTA"};
    private static final String DEFAULT_ALGO = "DFB";
    private static final int NID_COL_WIDTH = 50;
    private static final int DESC_COL_WIDTH = 200;

    @SuppressWarnings("unchecked")
    private NetworkUIModel model = new NetworkUIModel(AlgoFactory.createAlgo(DEFAULT_ALGO));

    private JPanel contentPanel;
    private NetworkCanvas networkCanvas;
    private JPanel controlPanel;
    private JButton resetButton;
    private JTable msgTable;
    private JScrollPane msgScroll;
    private JComboBox algoComboBox;

    private final JLabel msgRenderer = new JLabel();

    public UIDemo() {
        $$$setupUI$$$();
        algoComboBox.addActionListener((e) -> model.updateAlgo((String) algoComboBox.getSelectedItem()));
        resetButton.addActionListener((e) -> model.reset());
        setupMsgTable();
    }

    private void setupMsgTable() {
        msgTable.getSelectionModel().addListSelectionListener(e -> {
            if (e.getValueIsAdjusting())
                return;
            SwingUtilities.invokeLater(this::processSelectedMessages);
        });
        TableColumnModel cols = msgTable.getColumnModel();
        for (int i = 0; i < cols.getColumnCount(); i++) {
            cols.getColumn(i).setCellRenderer((table, value, isSelected, hasFocus, row, column) -> {
                msgRenderer.setEnabled(model.getMsgs().get(row).firstOverLink);
                msgRenderer.setText(value.toString());
                return msgRenderer;
            });
        }
        cols.getColumn(0).setPreferredWidth(NID_COL_WIDTH);
        cols.getColumn(1).setPreferredWidth(NID_COL_WIDTH);
        cols.getColumn(2).setPreferredWidth(DESC_COL_WIDTH);
    }

    private void processSelectedMessages() {
        int oldSize = model.getMsgs().size();
        int oldIndex = 0;
        boolean[] s = new boolean[oldSize];
        for (int i = 0; i < oldSize; i++)
            s[i] = msgTable.getSelectionModel().isSelectedIndex(i);
        msgTable.getSelectionModel().clearSelection();
        for (int i = 0; i < oldSize; i++)
            if (s[i]) {
                if (model.getMsgs().get(oldIndex).firstOverLink)
                    model.processMessage(oldIndex);
            } else
                oldIndex++;
    }

    private void createUIComponents() {
        networkCanvas = new NetworkCanvas(model);
        msgTable = new JTable(new MessagesTableModel(model));
        algoComboBox = new JComboBox<>(ALGOS);
        algoComboBox.setSelectedItem(DEFAULT_ALGO);
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("Routing Algorithms Simulator");
        frame.setContentPane(new UIDemo().contentPanel);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPanel = new JPanel();
        contentPanel.setLayout(new BorderLayout(5, 5));
        contentPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5), null));
        contentPanel.add(networkCanvas, BorderLayout.CENTER);
        controlPanel = new JPanel();
        controlPanel.setLayout(new GridBagLayout());
        contentPanel.add(controlPanel, BorderLayout.EAST);
        final JLabel label1 = new JLabel();
        label1.setText("Messages");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(0, 0, 5, 0);
        controlPanel.add(label1, gbc);
        msgScroll = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        controlPanel.add(msgScroll, gbc);
        msgScroll.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        msgTable.setPreferredScrollableViewportSize(new Dimension(300, 400));
        msgTable.setShowVerticalLines(true);
        msgScroll.setViewportView(msgTable);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(5, 0, 0, 0);
        controlPanel.add(panel1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Algo");
        panel1.add(label2);
        panel1.add(algoComboBox);
        resetButton = new JButton();
        resetButton.setText("Reset");
        panel1.add(resetButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPanel;
    }
}
